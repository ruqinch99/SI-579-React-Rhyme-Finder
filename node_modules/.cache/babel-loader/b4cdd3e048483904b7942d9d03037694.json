{"ast":null,"code":"var _jsxFileName = \"/Users/ruqinchang/Desktop/Winter 22/SI 579 Bldg Interactive App/Problem Sets/Problem Set 6/rhyme_finder/src/Components/SynonymsButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SynonymsButton = props => {\n  const {\n    datamuseRequest,\n    wordInput,\n    wordsList,\n    setWordOutput\n  } = props;\n  /**\n   * Gets a URL to fetch 'similar to' from Datamuse.\n   *\n   * @param {string} ml\n   *   The word to find similar words for.\n   *\n   * @returns {string}\n   *   The Datamuse request URL.\n   */\n\n  function getDatamuseSimilarToUrl(ml) {\n    return `https://api.datamuse.com/words?${new URLSearchParams({\n      'ml': wordInput\n    }).toString()}`;\n  }\n\n  function showSynonyms(result) {\n    const output = [];\n\n    if (result.length !== 0) {\n      output.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" Words with a similar meaning to \", wordInput, \": \"]\n      }, \"titleSyn\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }, this));\n      output.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", wordsList(result), \" \"]\n      }, 'ul', true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this));\n    } else {\n      output.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" no result \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this));\n    }\n\n    setWordOutput(output);\n  }\n\n  const synonyms = () => {\n    datamuseRequest(getDatamuseSimilarToUrl(wordInput), showSynonyms);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: synonyms,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    children: \" Show synonyms \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this);\n};\n\n_c = SynonymsButton;\nexport default SynonymsButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SynonymsButton\");","map":{"version":3,"sources":["/Users/ruqinchang/Desktop/Winter 22/SI 579 Bldg Interactive App/Problem Sets/Problem Set 6/rhyme_finder/src/Components/SynonymsButton.js"],"names":["SynonymsButton","props","datamuseRequest","wordInput","wordsList","setWordOutput","getDatamuseSimilarToUrl","ml","URLSearchParams","toString","showSynonyms","result","output","length","push","synonyms"],"mappings":";;;AAAA,MAAMA,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AACFC,IAAAA,eADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA;AAJE,MAKFJ,KALJ;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,WAASK,uBAAT,CAAiCC,EAAjC,EAAqC;AACjC,WAAQ,kCAAkC,IAAIC,eAAJ,CAAoB;AAAE,YAAML;AAAR,KAApB,CAAD,CAA2CM,QAA3C,EAAsD,EAA/F;AACH;;AAED,WAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC1B,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACrBD,MAAAA,MAAM,CAACE,IAAP,eAAa;AAAA,wDAAyDX,SAAzD;AAAA,SAAW,UAAX;AAAA;AAAA;AAAA;AAAA,cAAb;AACAS,MAAAA,MAAM,CAACE,IAAP,eAAa;AAAA,wBACTV,SAAS,CAACO,MAAD,CADA;AAAA,SAAW,IAAX;AAAA;AAAA;AAAA;AAAA,cAAb;AAGH,KALD,MAMK;AACDC,MAAAA,MAAM,CAACE,IAAP,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AACH;;AACDT,IAAAA,aAAa,CAACO,MAAD,CAAb;AACH;;AAED,QAAMG,QAAQ,GAAG,MAAM;AACnBb,IAAAA,eAAe,CAACI,uBAAuB,CAACH,SAAD,CAAxB,EAAqCO,YAArC,CAAf;AACH,GAFD;;AAIA,sBAAS;AAAS,IAAA,OAAO,EAAIK,QAApB;AAA8B,IAAA,IAAI,EAAG,QAArC;AAA8C,IAAA,SAAS,EAAG,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACH,CAxCD;;KAAMf,c;AA0CN,eAAeA,cAAf","sourcesContent":["const SynonymsButton = (props) => {\n    const {\n        datamuseRequest,\n        wordInput,\n        wordsList,\n        setWordOutput,\n    } = props;\n\n    /**\n     * Gets a URL to fetch 'similar to' from Datamuse.\n     *\n     * @param {string} ml\n     *   The word to find similar words for.\n     *\n     * @returns {string}\n     *   The Datamuse request URL.\n     */\n    function getDatamuseSimilarToUrl(ml) {\n        return `https://api.datamuse.com/words?${(new URLSearchParams({ 'ml': wordInput })).toString()}`\n    }\n\n    function showSynonyms(result) {\n        const output = [];\n        if (result.length !== 0) {\n            output.push( < h2 key = \"titleSyn\" > Words with a similar meaning to {wordInput}: < /h2>)\n            output.push( < ul key = 'ul' > {\n                wordsList(result)\n            } < /ul>);\n        }\n        else {\n            output.push( < p > no result < /p>);\n        }\n        setWordOutput(output);\n    }\n\n    const synonyms = () => {\n        datamuseRequest(getDatamuseSimilarToUrl(wordInput), showSynonyms)\n    }\n\n    return ( < button onClick = {synonyms} type = \"button\" className = \"btn btn-secondary\" > Show synonyms < /button>)\n}\n\nexport default SynonymsButton;"]},"metadata":{},"sourceType":"module"}